---
# TODO check unused packages and remove them
- name: Install required packages
  ansible.builtin.apt:
    name:
      - curl
      - apt-transport-https
      - git
      - wget
      - software-properties-common
      #- lsb-release # DEPRECATED --> see containerd tasks
      - ca-certificates
      - socat
    state: present
  register: reg_apt_install
  until: reg_apt_install is succeeded
  retries: 5
  delay: 30

- name: Disable and stop UFW firewall service
  ansible.builtin.systemd_service:
    name: ufw
    enabled: false
    state: stopped

- name: Add persistent configuration file for kernel modules
  ansible.builtin.copy:
    content: |
      overlay
      br_netfilter
    dest: /etc/modules-load.d/k8s.conf
    owner: root
    group: root
    mode: '0644'

- name: Load kernel modules for K8s - overlay
  community.general.modprobe:
    name: overlay
    state: present

- name: Load kernel modules for K8s - br_netfilter
  community.general.modprobe:
    name: br_netfilter
    state: present

- name: Copy kernel parameters configuration file
  ansible.builtin.template:
    src: 10-kubernetes.conf.j2
    dest: /etc/sysctl.d/10-kubernetes.conf
    owner: root
    group: root
    mode: '0644'

- name: Get kernel parameters and apply them at runtime
  ansible.builtin.sysctl:
     name: '{{ item.key }}'
     value: '{{ item.value }}'
     state: present
     sysctl_set: true
     reload: yes
     sysctl_file: /etc/sysctl.d/10-kubernetes.conf
  with_dict: '{{ sysctl_config }}'

# TODO move tasks related to Containerd installation to the beginning,
#      to aggregate APT installation process into a single task
- name: Ensure APT keyrings directory exists
  ansible.builtin.file:
    name: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Download Docker GPG file for the keyring
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /tmp/docker.asc
    checksum: sha256:1500c1f56fa9e26b9b8f42452a553675796ade0807cdce11975eb98170b3a570

- name: De-armor Docker GPG key
  ansible.builtin.shell: gpg --dearmor < /tmp/docker.asc > /etc/apt/keyrings/docker.gpg
  changed_when: false
  no_log: true

- name: Add Docker's repository to APT sources list
  ansible.builtin.deb822_repository:
    name: docker
    types: deb
    architectures: '{{ ansible_architecture }}'
    signed_by: /etc/apt/keyrings/docker.gpg
    uris: https://download.docker.com/linux/ubuntu
    suites: '{{ ansible_lsb.codename }}'
    components: stable
    trusted: true
    enabled: true

- name: Install Containerd
  ansible.builtin.apt:
    name: containerd.io
    state: present
    update_cache: yes

# TODO check applicability for modules to replace 'command'
- name: Create default Containerd config
  ansible.builtin.shell: containerd config default | tee /etc/containerd/config.toml
  args:
    creates: /etc/containerd/config.toml

- name: Set SystemdCgroup to true for Containerd
  ansible.builtin.lineinfile:
    path: /etc/containerd/config.toml
    regexp: '^SystemdCgroup = false'
    line: SystemdCgroup = true

- name: Enable and restart Containerd service
  ansible.builtin.systemd_service:
    name: containerd
    enabled: true
    state: restarted

# TODO move tasks related to Kubernetes installation to the beginning,
#      to aggregate APT installation process into a single task
- name: Download Kubernetes ASC file for the keyring
  ansible.builtin.get_url:
    url: https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key
    dest: /tmp/kubernetes.asc
    checksum: sha256:7627818cf7bae52f9008c93e8b1f961f53dea11d40891778de216fb1b43be54d

- name: De-armor Docker GPG key
  ansible.builtin.shell: gpg --dearmor < /tmp/kubernetes.asc > /etc/apt/keyrings/kubernetes.gpg
  changed_when: false
  no_log: true

- name: Add Docker's repository to APT sources list
  ansible.builtin.deb822_repository:
    name: kubernetes
    types: deb
    signed_by: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    uris: https://pkgs.k8s.io/core:/stable:/v1.31/deb/
    components: /
    trusted: true
    enabled: true

- name: Install K8s packages
  ansible.builtin.apt:
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: present
    update_cache: yes

- name: Mark K8s packages to prevent upgrades
  ansible.builtin.dpkg_selections:
    name:
      - kubelet
      - kubeadm
      - kubectl
    selection: hold

##Run only on Control-Node
#kubeadm config images pull
#
#kubeadm init --config=kubeadm-config.yaml --upload-certs
#
## Post install
#mkdir -p $HOME/.kube
#sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
#sudo chown $(id -u):$(id -g) $HOME/.kube/config
#
### For root:
#export KUBECONFIG=/etc/kubernetes/admin.conf
#
## HELM
#curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
#
## Install bash-completion
#source <(kubectl completion bash)
#echo "source <(kubectl completion bash)" >> $HOME/.bashrc